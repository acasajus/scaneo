package main

const (
	scansText = `{{define "scans"}}// DON'T EDIT *** generated by scaneo *** DON'T EDIT //

package {{.PackageName}}

import "database/sql"

{{range .Tokens -}}
func {{if $.Visibility}}S{{else}}s{{end}}can{{title .Name}}(r *sql.Row) (*{{.Name}}, error) {
	var s {{.Name}}
	if err := r.Scan({{range .Fields}}
		&s.{{.Name}},{{end}}
	); err != nil {
		return nil, err
	}
	return &s, nil
}

func {{if $.Visibility}}S{{else}}s{{end}}can{{title .Name}}s(rs *sql.Rows) ([]*{{.Name}}, error) {
	structs := make([]*{{.Name}}, 0, 16)
	var err error
	for rs.Next() {
		var s {{.Name}}
		if err = rs.Scan({{range .Fields}}
			&s.{{.Name}},{{end}}
		); err != nil {
			return nil, err
		}
		structs = append(structs, &s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func {{if $.Visibility}}F{{else}}f{{end}}ields{{title .Name}}(i *{{.Name}}) []interface{} {
	o := make([]interface{},{{len .Fields}})
	{{range $i, $v := .Fields -}}
	o[{{$i}}] = i.{{$v.Name}}
	{{end -}}
	return o
}

{{$fLen := len .Fields -}}
{{$typeName := .Name -}}
var (
	insert{{title .Name}}Fields = "({{range $i, $v := .Fields}}{{if $i}},{{end}}{{$v.Name}}{{end}})"
	insert{{title .Name}}Binds = "({{range $i, $v := .Fields}}{{if $i}},{{end}}${{inc $i}}{{end}})"
	update{{title .Name}}Fields = "{{range $i, $v := .Fields}}{{if $i}},{{end}}{{$v.Name}}=${{inc $i}}{{end}}"
	select{{title .Name}}Fields = "{{range $i, $v := .Fields}}{{if $i}},{{end}}{{$v.Name}}{{end}}"
	select{{title .Name}}FullFields = "{{range $i, $v := .Fields}}{{if $i}},{{end}}{{title $typeName}}.{{$v.Name}}{{end}}"
)

{{end -}}
{{end -}}`
)
